
user  nginx;
worker_processes  auto;
worker_rlimit_nofile 65536;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    use epoll;
    multi_accept on;
    worker_connections  65536;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    charset utf-8;

    gzip on;
    gzip_min_length 1k;
    gzip_comp_level 4;
    gzip_buffers 4 16k;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.";
    gzip_types text/plain text/javascript image/jpeg image/gif image/png application/javascript application/x-javascript application/x-httpd-php text/css application/xml application/x-font-otf application/x-font-ttf application/x-font-wof;

    client_body_buffer_size 512k;
    client_body_timeout 15;
    client_header_timeout 15;
    client_max_body_size 64m;
    ignore_invalid_headers on;
    keepalive_timeout 65;
    keepalive_requests 200;
    merge_slashes on;
    recursive_error_pages on;
    reset_timedout_connection on;

    sendfile on;
    send_timeout 65;
    server_names_hash_bucket_size 128;
    server_name_in_redirect off;
    tcp_nodelay off;
    tcp_nopush on;
    types_hash_max_size 2048;

    underscores_in_headers on;

    proxy_max_temp_file_size 0;
    proxy_connect_timeout 300;
    proxy_read_timeout 300;
    proxy_send_timeout 300;
    proxy_buffer_size 64k;
    proxy_buffers   4 64k;
    proxy_busy_buffers_size 128k;
    proxy_temp_file_write_size 128k;

    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 128k;
    fastcgi_param HTTPS on;

    # security
    server_tokens off;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header x-xss-protection "1; mode=block" always;
#    add_header Content-Security-Policy upgrade-insecure-requests;

    include /etc/nginx/conf.d/*.conf;
}
